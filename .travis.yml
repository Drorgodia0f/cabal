# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to
# test only against the last release in a major GHC version. Feel free to omit
# lines listings versions you don't need/want testing for.
matrix:
  include:
   - env: GHCVER=7.4.2
     os: linux
   - env: GHCVER=7.6.3
     os: linux
   - env: GHCVER=7.8.4
     os: linux
   - env: GHCVER=7.10.3
     os: linux
   - env: GHCVER=8.0.1 TEST_OLDER=NO
     os: linux
   - env: GHCVER=7.8.4
     os: osx
   - env: GHCVER=7.10.3
     os: osx
   - env: GHCVER=8.0.1 TEST_OLDER=NO
     os: osx
  allow_failures:
   - env: GHCVER=head

 # TODO add PARSEC_BUNDLED=YES when it's so
 # It seems pointless to run head if we're going to ignore the results.
 #- GHCVER=head

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - ./travis-install.sh
 - export PATH=/opt/ghc/$GHCVER/bin:$PATH
 - export PATH=$HOME/.ghc-install//bin:$PATH;

 # Set up deployment to the haskell/cabal-website repo.
 - ./travis-deploy.sh setup

install:
 # We intentionally do not install anything before trying to build Cabal because
 # it should build with each supported GHC version out-of-the-box.

# Here starts the actual work to be performed for the package under test; any
# command which exits with a non-zero exit code causes the build to fail. Using
# ./dist/setup/setup here instead of cabal-install to avoid breakage when the
# build config format changed.
script:
 - ./travis-script.sh -j

# Deploy Haddocks to the haskell/cabal-website repo.
after_success:
 - ./travis-deploy.sh deploy

notifications:
  irc:
    channels:
      - "chat.freenode.net##haskell-cabal"
  slack: haskell-cabal:sCq6GLfy9N8MJrInosg871n4
